{
    "RESPONSE_Headers_Info": [
        {
            "Name": "Server", 
            "Value": " nginx/1.17.6"
        }, 
        {
            "Name": "Content-Type", 
            "Value": " text/html; charset=UTF-8"
        }, 
        {
            "Name": "Link", 
            "Value": " <https://ins-isi.com/wp-json/>; rel=\"https://api.w.org/\", <https://ins-isi.com/>; rel=shortlink"
        }, 
        {
            "Name": "Expires", 
            "Value": " Wed, 11 Jan 1984 05:00:00 GMT"
        }, 
        {
            "Name": "Cache-Control", 
            "Value": " no-cache, must-revalidate, max-age=0"
        }, 
        {
            "Name": "Vary", 
            "Value": " Accept-Encoding"
        }, 
        {
            "Name": "host-header", 
            "Value": " c2hhcmVkLmJsdWVob3N0LmNvbQ=="
        }, 
        {
            "Name": "X-Endurance-Cache-Level", 
            "Value": " 2"
        }, 
        {
            "Name": "X-Server-Cache", 
            "Value": " true"
        }, 
        {
            "Name": "X-Proxy-Cache", 
            "Value": " MISS"
        }, 
        {
            "Name": "Transfer-Encoding", 
            "Value": " chunked"
        }
    ], 
    "RESPONSE_Headers_Details": [
        {
            "Reference": "https://tools.ietf.org/html/rfc7230#section-3.3.1", 
            "Security Description": "Response splitting (a.k.a, CRLF injection) is a common technique, used in various attacks on Web usage, that exploits the line-based nature of HTTP message framing and the ordered association of requests to responses on persistent connections. This technique can be particularly damaging when the requests pass through a shared cache.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/79.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "Value": "chunked", 
            "Recommendations": "A common defense against response splitting is to filter requests for data that looks like encoded CR and LF (e.g., \"%0D\" and \"%0A\"). However, that assumes the application server is only performing URI decoding, rather than more obscure data transformations like charset transcoding, XML entity translation, base64 decoding, sprintf reformatting, etc. A more effective mitigation is to prevent anything other than the server's core protocol libraries from sending a CR or LF within the header section, which means restricting the output of header fields to APIs that filter for bad octets and not allowing application servers to write directly to the protocol stream.", 
            "Header Field Name": "Transfer-Encoding", 
            "CWE": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", 
            "Security Reference": "<a href='https://tools.ietf.org/html/rfc7230#section-9'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "https://tools.ietf.org/html/rfc7231#section-7.4.2", 
            "Security Description": "Overly long and detailed Server field values increase response latency and potentially reveal internal implementation details that might make it (slightly) easier for attackers to find and exploit known security holes.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/200.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "Value": "nginx/1.17.6", 
            "Recommendations": "An origin server SHOULD NOT generate a Server field containing needlessly fine-grained detail and SHOULD limit the addition of subproducts by third parties.", 
            "Header Field Name": "Server", 
            "CWE": "CWE-200: Information Exposure", 
            "Security Reference": "<a href='https://tools.ietf.org/html/rfc7231#section-7.4.2'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "https://tools.ietf.org/html/rfc5988#section-5", 
            "Security Description": "The content of the Link header field is not secure, private or integrity-guaranteed, and due caution should be exercised when using it.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/319.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "Value": "<https://ins-isi.com/wp-json/>; rel=\"https://api.w.org/\", <https://ins-isi.com/>; rel=shortlink", 
            "Recommendations": "Use of Transport Layer Security (TLS) with HTTP ([RFC2818] and [RFC2817]) is currently the only end-to-end way to provide such protection. Applications that take advantage of typed links should consider the attack vectors opened by automatically following, trusting, or otherwise using links gathered from HTTP headers. In particular, Link headers that use the \"anchor\" parameter to associate a link's context with another resource should be treated with due caution. The Link entity-header field makes extensive use of IRIs and URIs. See [RFC3987] for security considerations relating to IRIs. See [RFC3986] for security considerations relating to URIs. See [RFC2616] for security considerations relating to HTTP headers.", 
            "Header Field Name": "Link", 
            "CWE": "CWE-319: Cleartext Transmission of Sensitive Information", 
            "Security Reference": "<a href='https://tools.ietf.org/html/rfc5988#section-5'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "https://tools.ietf.org/html/rfc7234#section-5.2", 
            "Security Description": "Caches expose additional potential vulnerabilities, since the contents of the cache represent an attractive target for malicious exploitation.  Because cache contents persist after an HTTP request is complete, an attack on the cache can reveal information long after a user believes that the information has been removed from the network.  Therefore, cache contents need to be protected as sensitive information.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/524.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "Value": "no-cache, must-revalidate, max-age=0", 
            "Recommendations": "Do not store unnecessarily sensitive information in the cache.", 
            "Header Field Name": "Cache-Control", 
            "CWE": "CWE-524: Information Exposure Through Caching", 
            "Security Reference": "<a href='https://tools.ietf.org/html/rfc7234#section-8'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "https://tools.ietf.org/html/rfc7231#section-3.1.1.5", 
            "Security Description": "In practice, resource owners do not always properly configure their origin server to provide the correct Content-Type for a given representation, with the result that some clients will examine a payload's content and override the specified type. Clients that do so risk drawing incorrect conclusions, which might expose additional security risks (e.g., \"privilege escalation\").", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/430.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "Value": "text/html; charset=UTF-8", 
            "Recommendations": "Properly configure their origin server to provide the correct Content-Type for a given representation.", 
            "Header Field Name": "Content-Type", 
            "CWE": "CWE-430: Deployment of Wrong Handler", 
            "Security Reference": "<a href='https://tools.ietf.org/html/rfc7231#section-3.1.1.5'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }
    ], 
    "Missing_Headers_Details": [
        {
            "Reference": "https://tools.ietf.org/html/rfc7234#section-5.4", 
            "Security Description": "Caches expose additional potential vulnerabilities, since the contents of the cache represent an attractive target for malicious exploitation.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/524.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "HTTPS": "N", 
            "Recommendations": "The \"Pragma\" header field allows backwards compatibility with HTTP/1.0 caches, so that clients can specify a \"no-cache\" request that they will understand (as Cache-Control was not defined until HTTP/1.1). When the Cache-Control header field is also present and understood in a request, Pragma is ignored. Define \"Pragma: no-cache\" whenever is possible.", 
            "Header Field Name": "Pragma", 
            "CWE": "CWE-524: Information Exposure Through Caching", 
            "Security Reference": "<a href='https://tools.ietf.org/html/rfc7234#section-8'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "https://tools.ietf.org/html/rfc7034", 
            "Security Description": "The use of \"X-Frame-Options\" allows a web page from host B to declare that its content (for example, a button, links, text, etc.) must not be displayed in a frame (<frame> or <iframe>) of another page (e.g., from host A). This is done by a policy declared in the HTTP header and enforced by browser implementations.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/693.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "HTTPS": "N", 
            "Recommendations": " In 2009 and 2010, many browser vendors ([Microsoft-X-Frame-Options] and [Mozilla-X-Frame-Options]) introduced the use of a non-standard HTTP [RFC2616] header field \"X-Frame-Options\" to protect against clickjacking. Please check here https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet what's the best option for your case.", 
            "Header Field Name": "X-Frame-Options", 
            "CWE": "CWE-693: Protection Mechanism Failure", 
            "Security Reference": "<a href='https://tools.ietf.org/html/rfc7034'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "https://tools.ietf.org/html/rfc7034", 
            "Security Description": "The use of \"X-Frame-Options\" allows a web page from host B to declare that its content (for example, a button, links, text, etc.) must not be displayed in a frame (<frame> or <iframe>) of another page (e.g., from host A). This is done by a policy declared in the HTTP header and enforced by browser implementations.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/693.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "HTTPS": "N", 
            "Recommendations": " In 2009 and 2010, many browser vendors ([Microsoft-X-Frame-Options] and [Mozilla-X-Frame-Options]) introduced the use of a non-standard HTTP [RFC2616] header field \"X-Frame-Options\" to protect against clickjacking. Please check here https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet what's the best option for your case.", 
            "Header Field Name": "Frame-Options", 
            "CWE": "CWE-693: Protection Mechanism Failure", 
            "Security Reference": "<a href='https://tools.ietf.org/html/rfc7034'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-iv-the-xss-filter.aspx", 
            "Security Description": "This header enables the Cross-site scripting (XSS) filter built into most recent web browsers. It's usually enabled by default anyway, so the role of this header is to re-enable the filter for this particular website if it was disabled by the user. This header is supported in IE 8+, and in Chrome (not sure which versions). The anti-XSS filter was added in Chrome 4. Its unknown if that version honored this header.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/79.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "HTTPS": "N", 
            "Recommendations": "Use \"X-XSS-Protection: 1; mode=block\" whenever is possible (ref. http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx).", 
            "Header Field Name": "X-XSS-Protection", 
            "CWE": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", 
            "Security Reference": "<a href='https://www.owasp.org/index.php/List_of_useful_HTTP_headers'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx", 
            "Security Description": "The only defined value, \"nosniff\", prevents Internet Explorer and Google Chrome from MIME-sniffing a response away from the declared content-type. This also applies to Google Chrome, when downloading extensions. This reduces exposure to drive-by download attacks and sites serving user uploaded content that, by clever naming, could be treated by MSIE as executable or dynamic HTML files.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/79.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "HTTPS": "N", 
            "Recommendations": "Always use the only defined value, \"nosniff\".", 
            "Header Field Name": "X-Content-Type-Options", 
            "CWE": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", 
            "Security Reference": "<a href='https://www.owasp.org/index.php/List_of_useful_HTTP_headers'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "http://www.w3.org/TR/CSP/", 
            "Security Description": "Content Security Policy requires careful tuning and precise definition of the policy. If enabled, CSP has significant impact on the way browser renders pages (e.g., inline JavaScript disabled by default and must be explicitly allowed in policy). CSP prevents a wide range of attacks, including Cross-site scripting and other cross-site injections.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/79.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "HTTPS": "N", 
            "Recommendations": "Read the reference http://www.w3.org/TR/CSP/ and set according to your case. This is not a easy job.", 
            "Header Field Name": "Content-Security-Policy", 
            "CWE": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", 
            "Security Reference": "<a href='https://www.owasp.org/index.php/List_of_useful_HTTP_headers'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "http://www.w3.org/TR/CSP/", 
            "Security Description": "Content Security Policy requires careful tuning and precise definition of the policy. If enabled, CSP has significant impact on the way browser renders pages (e.g., inline JavaScript disabled by default and must be explicitly allowed in policy). CSP prevents a wide range of attacks, including Cross-site scripting and other cross-site injections.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/79.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "HTTPS": "N", 
            "Recommendations": "Read the reference http://www.w3.org/TR/CSP/ and set according to your case. This is not a easy job.", 
            "Header Field Name": "X-Content-Security-Policy", 
            "CWE": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", 
            "Security Reference": "<a href='https://www.owasp.org/index.php/List_of_useful_HTTP_headers'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "http://www.w3.org/TR/CSP/", 
            "Security Description": "Content Security Policy requires careful tuning and precise definition of the policy. If enabled, CSP has significant impact on the way browser renders pages (e.g., inline JavaScript disabled by default and must be explicitly allowed in policy). CSP prevents a wide range of attacks, including Cross-site scripting and other cross-site injections.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/79.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "HTTPS": "N", 
            "Recommendations": "Read the reference http://www.w3.org/TR/CSP/ and set according to your case. This is not a easy job.", 
            "Header Field Name": "X-WebKit-CSP", 
            "CWE": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", 
            "Security Reference": "<a href='https://www.owasp.org/index.php/List_of_useful_HTTP_headers'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }, 
        {
            "Reference": "http://www.w3.org/TR/CSP/", 
            "Security Description": "Like Content-Security-Policy, but only reports. Useful during implementation, tuning and testing efforts.", 
            "CWE URL": "<a href='https://cwe.mitre.org/data/definitions/79.html'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>", 
            "HTTPS": "N", 
            "Recommendations": "Read the reference http://www.w3.org/TR/CSP/ and set according to your case. This is not a easy job.", 
            "Header Field Name": "Content-Security-Policy-Report-Only", 
            "CWE": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", 
            "Security Reference": "<a href='https://www.owasp.org/index.php/List_of_useful_HTTP_headers'><button class='btn btn-success waves-effect waves-light m-r-10' style='width: 100% !important;'>Click Here</button></a>"
        }
    ]
}